import random
from typing import List, Tuple
import time

NUM_ROWS = 256

arr = list()

for idx in range(NUM_ROWS):
    val = random.randint(0, 255)
    # val = idx  # best case
    # val = 255 - idx  # worst case
    arr.append(val)

arr = sorted(arr)
print("Input Array:")

with open("input_file.txt", "w") as f:
    for val in arr:
        f.write(f"{val:08b}\n")


def linear_search(
    bram: List[int],
    idx_left: int,
    idx_right: int,
    target: int,
) -> Tuple[int, int]:
    idx: int = idx_left

    while idx < idx_right:
        if bram[idx] == target:
            return idx, bram[idx]
        if bram[idx] > target:
            break
        idx += 1

    if idx > idx_right:
        return idx-1, bram[idx-1]

    if idx < len(bram) - 1 and idx > 0:
        if (target - bram[idx]) <= (bram[idx - 1] - target):
            return idx - 1, bram[idx-1]

    return idx, bram[idx]


def binary_search(
    bram: List[int],
    idx_left: int,
    idx_right: int,
    target: int,
) -> Tuple[int, int]:
    idx_middle: int
    cycles: int = 0
    found: bool = False
    while idx_left < idx_right:
        idx_middle = (idx_left >> 1) + (idx_right >> 1)
        val_mid = bram[idx_middle]

        print(f"[{idx_left:02d}, {idx_right:02d}]", "idx_mid =", idx_middle, "val =", val_mid, "target =", target)
        time.sleep(0.01)

        if target > val_mid:
            idx_left = idx_middle
            print("idx_left =", idx_left)
            if idx_left + 1 >= idx_right:
                break

        elif target < val_mid:
            idx_right = idx_middle
            print("idx_right =", idx_right)

        else:
            print(f"!FOUND[{idx_left:02d}, {idx_middle:02d}, {idx_right:02d}]")
            idx_right = idx_middle
            found = True
            if idx_right == idx_left:
                break

        cycles += 1

    print("!cycles =", cycles)
    print(f"!rEND[{idx_left:02d}, {idx_middle:02d}, {idx_right:02d}]")

    if found is False:
        idx_min: int = min(min(idx_left, idx_middle), idx_right)
        idx_max: int = max(max(idx_left, idx_middle), idx_right)
        print("minmax:", idx_min, idx_max)

        if target > bram[idx_max]:
            idx_left = idx_max
        elif target < bram[idx_min]:
            idx_left = 0
        else:
            A = bram[idx_max] - target
            B = target - bram[idx_min]

            print("A =", A, ", B =", B)
            if A < B:
                idx_left = idx_max
            else:
                idx_left = idx_min

        print(f"!CHNG[{idx_left:02d}, {idx_middle:02d}, {idx_right:02d}]")

    return idx_left, bram[idx_left]


target = random.randint(0, 255)
# target = 191
# target = 5
# arr = [2, 3, 10, 13, 16, 18, 21, 33, 35, 41, 51, 54, 67, 68, 73, 86, 90, 97,
#        103, 122, 129, 138, 157, 171, 192, 198, 203, 207, 230, 234, 240, 242]
# arr = [2, 15, 19, 28, 29, 39, 40, 44, 44, 44, 44, 44, 44, 82, 82, 82, 85, 90, 91, 95, 97, 97, 98, 110, 111, 113, 114, 117, 122, 128, 139, 140, 148, 157, 157, 158, 158, 159, 165, 171, 171, 172, 173, 174, 176, 177, 180, 181, 183, 192, 197, 203, 206, 207, 210, 212, 224, 225, 228, 230, 236, 240, 240, 252]
# arr = [1, 1, 11, 12, 12, 18, 30, 32, 35, 42, 52, 53, 54, 58, 64, 66, 70, 71, 72, 73, 74, 78, 78, 82, 82, 83, 87, 92, 94, 109, 110, 110, 111, 112, 126, 140, 150, 160, 163, 177, 178, 192, 192, 196, 198, 198, 210, 213, 214, 217, 219, 224, 226, 226, 227, 229, 229, 230, 232, 236, 236, 244, 245, 251]
# arr = [1, 1, 1, 2, 2, 4, 16, 16, 16, 25, 26, 31, 32, 38, 40, 44, 44, 44, 44, 63, 67, 68, 76, 79, 86, 92, 97, 97, 99, 102, 109, 110, 114, 125, 126, 130, 135, 137, 143, 148, 154, 167, 173, 174, 176, 180, 181, 184, 185, 205, 209, 212, 224, 233, 235, 236, 236, 239, 244, 247, 249, 249, 253, 253]

# arr = [0, 1, 1, 1, 2, 2, 4, 5, 6, 6, 7, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 15, 16, 17, 18, 19, 19, 20, 22, 23, 23, 23, 24, 24, 24, 24, 26, 27, 28, 30, 31, 31, 31, 32, 33, 33, 34, 34, 35, 35, 35, 35, 37, 38, 38, 38, 40, 40, 41, 41, 46, 46, 46, 47, 48, 48, 48, 50, 51, 53, 54, 56, 56, 56, 56, 59, 59, 64, 67, 69, 70, 72, 72, 72, 73, 73, 74, 75, 75, 79, 81, 83, 83, 84, 84, 87, 88, 88, 88, 89, 90, 93, 94, 94, 94, 96, 96, 96, 99, 99, 102, 104, 107, 107, 108, 109, 110, 113, 113, 113, 115, 116, 120, 120, 120, 123, 124, 125, 125, 126, 127, 132, 133, 133, 134, 135, 138, 139, 140, 140, 142, 143, 144, 146, 147, 148, 149, 150, 150, 152, 152, 152, 152, 154, 154, 155, 156, 158, 159, 160, 161, 162, 162, 163, 164, 165, 165, 165, 166, 166, 167, 167, 167, 169, 169, 170, 170, 173, 174, 175, 176, 180, 182, 182, 183, 183, 186, 189, 190, 190, 190, 194, 196, 197, 197, 198, 200, 201, 201, 202, 202, 203, 204, 205, 205, 207, 207, 208, 209, 211, 213, 213, 214, 214, 214, 214, 214, 215, 216, 219, 220, 220, 221, 221, 221, 223, 224, 225, 226, 226, 227, 229, 229, 229, 232, 233, 235, 235, 236, 237, 238, 238, 238, 239, 239, 241, 242, 242, 243, 244, 244, 246, 250, 250, 252, 252]
# arr = [0, 1, 8, 10, 10, 11, 11, 11, 14, 16, 18, 19, 20, 21, 21, 22, 23, 23, 24, 25, 26, 26, 26, 27, 27, 28, 28, 31, 32, 33, 34, 36, 40, 41, 41, 41, 42, 43, 43, 44, 46, 46, 47, 49, 50, 51, 51, 51, 52, 54, 56, 57, 58, 58, 60, 60, 61, 61, 61, 63, 65, 66, 66, 66, 66, 67, 68, 69, 69, 70, 71, 72, 74, 75, 75, 75, 78, 79, 80, 80, 80, 80, 80, 81, 81, 82, 82, 82, 83, 84, 84, 90, 90, 93, 93, 95, 98, 98, 98, 99, 99, 100, 100, 104, 104, 105, 105, 107, 108, 108, 109, 109, 109, 109, 110, 111, 112, 112, 113, 113, 113, 114, 115, 117, 117, 118, 118, 120, 120, 120, 121, 125, 125, 126, 128, 129, 129, 129, 130, 133, 133, 134, 134, 135, 137, 137, 138, 139, 140, 142, 142, 142, 142, 145, 146, 149, 150, 150, 151, 154, 155, 156, 161, 165, 167, 167, 169, 169, 170, 171, 172, 175, 175, 176, 179, 179, 180, 180, 181, 181, 182, 183, 183, 186, 186, 186, 187, 187, 187, 187, 188, 188, 189, 189, 190, 192, 193, 194, 195, 195, 195, 197, 199, 199, 201, 203, 205, 206, 206, 207, 209, 209, 209, 211, 213, 213, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 227, 228, 228, 229, 229, 232, 235, 235, 235, 236, 236, 237, 239, 240, 242, 243, 245, 246, 246, 247, 247, 248, 250, 250, 253, 254, 254, 254, 255, 255]
# target = 231
# target = 255
# arr = [1, 2, 3, 4, 4, 4, 5, 5, 10, 10, 11, 11, 11, 13, 13, 14, 14, 14, 17, 18, 18, 20, 24, 25, 25, 27, 27, 29, 30, 31, 32, 35, 35, 35, 39, 40, 41, 42, 43, 43, 44, 44, 44, 44, 44, 45, 45, 45, 47, 47, 47, 49, 50, 52, 52, 53, 54, 55, 57, 58, 58, 58, 59, 59, 61, 62, 64, 67, 67, 67, 68, 68, 68, 72, 72, 73, 73, 75, 75, 75, 78, 78, 79, 81, 81, 84, 85, 85, 86, 89, 90, 90, 91, 93, 95, 96, 96, 96, 96, 97, 98, 98, 100, 101, 104, 104, 107, 107, 109, 109, 110, 110, 111, 111, 111, 111, 112, 113, 113, 114, 114, 114, 115, 115, 117, 117, 118, 119, 121, 122, 123, 124, 125, 125, 125, 127, 128, 131, 133, 133, 134, 135, 137, 138, 138, 138, 138, 139, 142, 143, 144, 144, 145, 146, 147, 147, 150, 151, 152, 152, 154, 155, 157, 158, 159, 161, 162, 162, 163, 164, 165, 165, 165, 167, 168, 173, 175, 175, 176, 176, 177, 179, 180, 181, 186, 188, 189, 189, 191, 192, 193, 193, 193, 195, 195, 197, 197, 199, 199, 199, 200, 200, 200, 201, 201, 204, 207, 210, 210, 211, 211, 212, 213, 214, 215, 218, 219, 219, 219, 219, 220, 222, 222, 222, 226, 227, 227, 228, 229, 230, 230, 230, 231, 231, 231, 231, 232, 233, 237, 238, 240, 240, 241, 242, 242, 245, 245, 246, 247, 247, 248, 249, 251, 253, 254, 255]
# target = 105

print(arr)
print("Target Value:", target)

idx_gt, val_gt = linear_search(arr, 0, len(arr)-1, target)

print("Expected Output:", )

idx_res, val_res = binary_search(arr, 0, len(arr)-1, target)

print("> val res:", val_res, "idx:", idx_res)
print("> val gt: ", arr[idx_gt], "idx:", idx_gt)

if idx_res == idx_gt:
    print("PASSED!")
else:
    print()
    print("FAIL!FAIL!FAIL!FAIL!FAIL!FAIL!FAIL!FAIL!FAIL!FAIL!FAIL!")
    print()

print("-vhdl-")
